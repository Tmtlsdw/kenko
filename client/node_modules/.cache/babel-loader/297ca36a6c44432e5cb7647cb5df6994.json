{"ast":null,"code":"var _jsxFileName = \"/Users/tmtlsdw/Desktop/Tmtlsdw/Projects/Kenko/kenko/client/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions.js\";\nimport CustomButtonComponent from \"../custom-button/custom-button.component.jsx\";\nimport FormInputComponent from \"../form-input/form-input.component.jsx\";\nimport SignUpStyled from \"./sign-up.styled.jsx\";\n\nconst SignUpComponent = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInputComponent, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInputComponent, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInputComponent, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInputComponent, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomButtonComponent, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUpComponent);","map":{"version":3,"sources":["/Users/tmtlsdw/Desktop/Tmtlsdw/Projects/Kenko/kenko/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","signUpStart","CustomButtonComponent","FormInputComponent","SignUpStyled","SignUpComponent","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {signUpStart} from \"../../redux/user/user.actions.js\";\nimport CustomButtonComponent from \"../custom-button/custom-button.component.jsx\";\nimport FormInputComponent from \"../form-input/form-input.component.jsx\";\nimport SignUpStyled from \"./sign-up.styled.jsx\";\n\n\nconst SignUpComponent = ({signUpStart}) => {\n    const [userCredentials, setUserCredentials] = useState({\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n    const {displayName, email, password, confirmPassword} = userCredentials;\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (password !== confirmPassword) {\n            alert(\"passwords don't match\");\n            return;\n        }\n        signUpStart({displayName, email, password});\n    };\n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        setUserCredentials({...userCredentials, [name]: value});\n    };\n\n    return (\n        <SignUpStyled>\n            <h2 className={\"title\"}>I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            <form className={\"sign-up-form\"} onSubmit={handleSubmit}>\n                <FormInputComponent\n                    type={\"text\"}\n                    name={\"displayName\"}\n                    value={displayName}\n                    onChange={handleChange}\n                    label={\"Display name\"}\n                    required\n                />\n                <FormInputComponent\n                    type={\"email\"}\n                    name={\"email\"}\n                    value={email}\n                    onChange={handleChange}\n                    label={\"Email\"}\n                    required\n                />\n                <FormInputComponent\n                    type={\"password\"}\n                    name={\"password\"}\n                    value={password}\n                    onChange={handleChange}\n                    label={\"password\"}\n                    required\n                />\n                <FormInputComponent\n                    type={\"password\"}\n                    name={\"confirmPassword\"}\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label={\"Confirm password\"}\n                    required\n                />\n                <CustomButtonComponent type={\"submit\"}>Sign Up</CustomButtonComponent>\n            </form>\n        </SignUpStyled>\n    );\n};\nconst mapDispatchToProps = (dispatch) => ({\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\nexport default connect(null, mapDispatchToProps)(SignUpComponent);\n"]},"metadata":{},"sourceType":"module"}