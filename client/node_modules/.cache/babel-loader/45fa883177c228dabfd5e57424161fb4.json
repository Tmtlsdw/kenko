{"ast":null,"code":"var _jsxFileName = \"/Users/tmtlsdw/Desktop/Tmtlsdw/Projects/Kenko/kenko/client/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions.js\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors.js\";\nimport CartItemComponent from \"../cart-item/cart-item.component.jsx\";\nimport CustomButtonComponent from \"../custom-button/custom-button.component.jsx\";\nimport CartDropdownStyled from \"./cart-dropdown.styled.jsx\";\n\nconst CartDropdownComponent = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/React.createElement(CartDropdownStyled, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-items\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItemComponent, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 11\n  }\n})) : /*#__PURE__*/React.createElement(\"span\", {\n  className: \"empty-message\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButtonComponent, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCartHidden());\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, \" \", \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdownComponent));","map":{"version":3,"sources":["/Users/tmtlsdw/Desktop/Tmtlsdw/Projects/Kenko/kenko/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","withRouter","createStructuredSelector","toggleCartHidden","selectCartItems","CartItemComponent","CustomButtonComponent","CartDropdownStyled","CartDropdownComponent","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,SAASC,eAAT,QAAgC,oCAAhC;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,qBAAP,MAAkC,8CAAlC;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,kBAC5B,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAeC,QAAD,iBACZ,oBAAC,iBAAD;AAAmB,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAjC;AAAqC,EAAA,IAAI,EAAED,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADD,gBAKC;AAAM,EAAA,SAAS,EAAE,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CADF,eAUE,oBAAC,qBAAD;AACE,EAAA,OAAO,EAAE,MAAM;AACbJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AACD,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMG,GANH,mBAVF,CADF;;AAsBA,MAAMc,eAAe,GAAGf,wBAAwB,CAAC;AAC/CO,EAAAA,SAAS,EAAEL;AADoC,CAAD,CAAhD;AAGA,eAAeH,UAAU,CAACD,OAAO,CAACiB,eAAD,CAAP,CAAyBT,qBAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions.js\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors.js\";\nimport CartItemComponent from \"../cart-item/cart-item.component.jsx\";\nimport CustomButtonComponent from \"../custom-button/custom-button.component.jsx\";\nimport CartDropdownStyled from \"./cart-dropdown.styled.jsx\";\n\nconst CartDropdownComponent = ({ cartItems, history, dispatch }) => (\n  <CartDropdownStyled>\n    <div className={\"cart-items\"}>\n      {cartItems.length ? (\n        cartItems.map((cartItem) => (\n          <CartItemComponent key={cartItem.id} item={cartItem} />\n        ))\n      ) : (\n        <span className={\"empty-message\"}>Your cart is empty</span>\n      )}\n    </div>\n    <CustomButtonComponent\n      onClick={() => {\n        history.push(\"/checkout\");\n        dispatch(toggleCartHidden());\n      }}\n    >\n      {\" \"}\n      GO TO CHECKOUT\n    </CustomButtonComponent>\n  </CartDropdownStyled>\n);\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdownComponent));\n"]},"metadata":{},"sourceType":"module"}